[{"C:\\Users\\tarasenko_ag\\Desktop\\BASE\\editor\\src\\index.js":"1","C:\\Users\\tarasenko_ag\\Desktop\\BASE\\editor\\src\\reportWebVitals.js":"2","C:\\Users\\tarasenko_ag\\Desktop\\BASE\\editor\\src\\App.js":"3","C:\\Users\\tarasenko_ag\\Desktop\\BASE\\editor\\src\\includes\\Body.jsx":"4","C:\\Users\\tarasenko_ag\\Desktop\\BASE\\editor\\src\\includes\\endpoints.jsx":"5","C:\\Users\\tarasenko_ag\\Desktop\\BASE\\editor\\src\\includes\\Contents.jsx":"6","C:\\Users\\tarasenko_ag\\Desktop\\BASE\\editor\\src\\includes\\Zones.jsx":"7","C:\\Users\\tarasenko_ag\\Desktop\\BASE\\editor\\src\\includes\\Search.jsx":"8","C:\\Users\\tarasenko_ag\\Desktop\\BASE\\editor\\src\\includes\\Tanks.jsx":"9","C:\\Users\\tarasenko_ag\\Desktop\\BASE\\editor\\src\\includes\\components\\Drawer.jsx":"10","C:\\Users\\tarasenko_ag\\Desktop\\BASE\\editor\\src\\includes\\components\\Modal.jsx":"11","C:\\Users\\tarasenko_ag\\Desktop\\BASE\\editor\\src\\includes\\reports\\ExportTable.jsx":"12","C:\\Users\\tarasenko_ag\\Desktop\\BASE\\editor\\src\\includes\\components\\Nav.jsx":"13","C:\\Users\\tarasenko_ag\\Desktop\\BASE\\editor\\src\\includes\\Species.jsx":"14","C:\\Users\\tarasenko_ag\\Desktop\\BASE\\editor\\src\\includes\\components\\ReportRenders.jsx":"15","C:\\Users\\tarasenko_ag\\Desktop\\BASE\\editor\\src\\includes\\components\\TableRenders.jsx":"16","C:\\Users\\tarasenko_ag\\Desktop\\BASE\\editor\\src\\includes\\SingleEntity.jsx":"17"},{"size":574,"mtime":1613013767158,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"19"},{"size":1194,"mtime":1614223195058,"results":"21","hashOfConfig":"19"},{"size":1991,"mtime":1613013767148,"results":"22","hashOfConfig":"19"},{"size":2907,"mtime":1613792815519,"results":"23","hashOfConfig":"19"},{"size":2269,"mtime":1613791933410,"results":"24","hashOfConfig":"19"},{"size":2277,"mtime":1613791938333,"results":"25","hashOfConfig":"19"},{"size":130,"mtime":1613013767152,"results":"26","hashOfConfig":"19"},{"size":2300,"mtime":1614223073267,"results":"27","hashOfConfig":"19"},{"size":3465,"mtime":1614225268320,"results":"28","hashOfConfig":"19"},{"size":1490,"mtime":1613621577609,"results":"29","hashOfConfig":"19"},{"size":4584,"mtime":1613624318362,"results":"30","hashOfConfig":"19"},{"size":1896,"mtime":1614212667074,"results":"31","hashOfConfig":"19"},{"size":2276,"mtime":1613791950395,"results":"32","hashOfConfig":"19"},{"size":2504,"mtime":1613624274030,"results":"33","hashOfConfig":"19"},{"size":4391,"mtime":1614225932977,"results":"34","hashOfConfig":"19"},{"size":4181,"mtime":1614212481665,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},"8wbtum",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"39"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"39"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"39"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"39"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"39"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\tarasenko_ag\\Desktop\\BASE\\editor\\src\\index.js",["79"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport bootstrap from 'bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["80","81"],"C:\\Users\\tarasenko_ag\\Desktop\\BASE\\editor\\src\\reportWebVitals.js",[],"C:\\Users\\tarasenko_ag\\Desktop\\BASE\\editor\\src\\App.js",["82","83"],"C:\\Users\\tarasenko_ag\\Desktop\\BASE\\editor\\src\\includes\\Body.jsx",["84","85","86","87","88"],"import React, {useState, useEffect} from \"react\";\r\n\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowDownward from \"@material-ui/icons/ArrowDownward\";\r\nimport MaterialTable from '@material-table/core';\r\n\r\nimport endpoints from \"./endpoints.jsx\";\r\n\r\n\r\n\r\nfunction Body() {\r\n\r\n\tconst [source, setSource] = useState({})\r\n\r\n\t//let headers = [];\t\r\n\r\n\t// if(tableHeaders.length < 1) {\r\n\t// \tconsole.log(\"Table headers reset to DEFAULT\");\r\n\t// \tsetTableHeaders(endpoints[0].headers);\r\n\t// }\r\n\r\n//####################################################################################\r\n//####################################################################################\r\n\r\n\t// function updateHeaders(arr) { \r\n\t// \theaders = arr;\r\n\t// };\r\n\r\n\t// useEffect( () => fetch(\"http://localhost:1337/headers\")\r\n\t// \t.then(res => res.json())\r\n\t// \t.then(items => updateHeaders(items)),\r\n\t// []);\r\n\r\n//####################################################################################\r\n//####################################################################################\r\n\r\n\r\n\tfunction changeEndpoint(e) {\r\n\t\tlet userChoise = e.target.value-1;\r\n\t\t//setTableHeaders(endpoints[userChoise].headers);\r\n\r\n\t\t// console.group('On change');\r\n\t\t// console.log(endpoints[userChoise]);\r\n\t\t// console.groupEnd();\r\n\r\n\t\tsetSource(endpoints[userChoise]);\r\n\t}\r\n\r\n\tfunction addSource() {\r\n\t\tsetSource(endpoints[0]);\r\n\t}\r\n\r\n\treturn <>\r\n\t\t\t\t<h1>All Data</h1>\r\n\t\t\t\t\t<div className=\"options\">\r\n\t\t\t\t\t\t<label>Endpoint\r\n\t\t\t\t\t\t<select placeholder=\"Choose an endpoint\" onChange={changeEndpoint}>\r\n\t\t\t\t\t\t\t{endpoints.map( item => <option key={item.id} value={item.id}>{item.name}</option>)}\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t<button type=\"button\" onClick={addSource}>ADD</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t<hr />\r\n\t\t\t\t\r\n\t\t\t</>\r\n\r\n\r\n\r\n}\r\n\r\nexport default Body;\r\n\r\n\r\n//Conditionally render Table components with data\r\n// Object.keys(source).length > 0 \r\n// \t? <RsuiteTable source={source} /> \r\n// \t: <p>No table selected...</p>",["89","90"],"C:\\Users\\tarasenko_ag\\Desktop\\BASE\\editor\\src\\includes\\endpoints.jsx",[],"C:\\Users\\tarasenko_ag\\Desktop\\BASE\\editor\\src\\includes\\Contents.jsx",["91","92"],"import React, {useState, useEffect} from \"react\";\r\nimport MaterialTable from '@material-table/core';\r\nimport axios from \"axios\";\r\n\r\nimport endpoints from \"./endpoints.jsx\";\r\nimport exportTable from \"./reports/ExportTable.jsx\";\r\nimport SingleEntity from \"./SingleEntity.jsx\";\r\n\r\nfunction Contents() {\r\n\tconst [data, setData] = useState({headers: [], data: []}); //first array - headers to the table, second - table data\r\n    const [selectedRow, setSelectedRow] = useState();\r\n    const source = endpoints[3];\r\n    const tableTitle = `Таблица \"${source.localizedName}\"`;\r\n\r\n    \r\n    useEffect( () => getPosts(), [source]);\r\n\r\n    async function getPosts() {\r\n        try {\r\n            const fetchedData = await axios.get(source.link);\r\n            const headers = endpoints.find( item => item.name == source.name).headers;; //Kinds\r\n\r\n            setData({\r\n                headers: headers,\r\n                data: fetchedData.data\r\n            })\r\n\r\n        } catch (err) {\r\n            console.error(err.message);\r\n        }\r\n    };\r\n\r\n    function exportWrapper(cols, datas) { exportTable(cols, datas, tableTitle) }\r\n\r\n    SingleEntity(data, \"content\");\r\n\r\n    return  <div className=\"data-container\">\r\n                <MaterialTable \r\n                    columns={data.headers} \r\n                    data={data.data} \r\n                    title={tableTitle}\r\n                    onRowClick={((evt, selectedRow) => setSelectedRow(selectedRow.tableData.id))}\r\n                    options={{\r\n                        columnsButton: true,\r\n                        filtering: true,\r\n                        paging: true,\r\n                        filterCellStyle: { padding: \"10px\"},\r\n                        pageSize: 10,\r\n                        pageSizeOptions: [10, 30, 50, 100, 300],\r\n                        emptyRowsWhenPaging: false,\r\n                        exportMenu: [{ label: 'Сохранить в PDF', exportFunc: (cols, datas, tableTitle) => exportWrapper(cols, datas) }],\r\n                        rowStyle: rowData => ({\r\n                            backgroundColor: (selectedRow === rowData.tableData.id) ? '#e0ddef' : '#FFF'\r\n                          })\r\n                    }} \r\n                />\r\n\t\t\t\t</div>\r\n\r\n}\r\n\r\nexport default Contents;","C:\\Users\\tarasenko_ag\\Desktop\\BASE\\editor\\src\\includes\\Zones.jsx",["93"],"import React, {useState, useEffect} from \"react\";\r\nimport MaterialTable from '@material-table/core';\r\nimport axios from \"axios\";\r\n//includes\r\nimport endpoints from \"./endpoints.jsx\";\r\nimport exportTable from \"./reports/ExportTable.jsx\";\r\nimport SingleEntity from \"./SingleEntity.jsx\";\r\n\r\nfunction Zones() {\r\n\tconst [data, setData] = useState({headers: [], data: []}); //first array - headers to the table, second - table data\r\n    const [selectedRow, setSelectedRow] = useState();\r\n    const source = endpoints[2];\r\n    const tableTitle = `Таблица \"${source.localizedName}\"`;\r\n\r\n    \r\n    useEffect( () => getPosts(), [source]);\r\n\r\n    async function getPosts() {\r\n        try {\r\n            const fetchedData = await axios.get(source.link);\r\n            const headers = endpoints.find( item => item.name === source.name).headers;; //Kinds\r\n\r\n            setData({\r\n                headers: headers,\r\n                data: fetchedData.data\r\n            })\r\n\r\n        } catch (err) {\r\n            console.error(err.message);\r\n        }\r\n    };\r\n\r\n    function exportWrapper(cols, datas) { exportTable(cols, datas, tableTitle) }\r\n\r\n    SingleEntity(data, \"zone\");\r\n\r\n    return  <div className=\"data-container\">\r\n                <MaterialTable \r\n                    columns={data.headers} \r\n                    data={data.data} \r\n                    title={tableTitle}\r\n                    onRowClick={((evt, selectedRow) => setSelectedRow(selectedRow.tableData.id))}\r\n                    options={{\r\n                        columnsButton: true,\r\n                        filtering: true,\r\n                        paging: true,\r\n                        filterCellStyle: { padding: \"10px\"},\r\n                        pageSize: 10,\r\n                        pageSizeOptions: [10, 30, 50, 100, 300],\r\n                        emptyRowsWhenPaging: false,\r\n                        exportMenu: [{ label: 'Сохранить в PDF', exportFunc: (cols, datas, tableTitle) => exportWrapper(cols, datas) }],\r\n                        rowStyle: rowData => ({\r\n                            backgroundColor: (selectedRow === rowData.tableData.id) ? '#e0ddef' : '#FFF'\r\n                          })\r\n                    }} \r\n                />\r\n            </div>\r\n}\r\n\r\nexport default Zones;","C:\\Users\\tarasenko_ag\\Desktop\\BASE\\editor\\src\\includes\\Search.jsx",[],"C:\\Users\\tarasenko_ag\\Desktop\\BASE\\editor\\src\\includes\\Tanks.jsx",["94"],"C:\\Users\\tarasenko_ag\\Desktop\\BASE\\editor\\src\\includes\\components\\Drawer.jsx",["95"],"C:\\Users\\tarasenko_ag\\Desktop\\BASE\\editor\\src\\includes\\components\\Modal.jsx",["96","97"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  paper: {\r\n    backgroundColor: '#fff',\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\nexport default function TransitionsModal(props) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button type=\"button\" onClick={handleOpen}>\r\n        <img src={props.img} style={props.styles}/>\r\n      </button>\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={handleClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n          <div className={classes.paper}>\r\n            \r\n            <img src={props.fullImg} className=\"modal-img\" />\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}","C:\\Users\\tarasenko_ag\\Desktop\\BASE\\editor\\src\\includes\\reports\\ExportTable.jsx",["98"],"import pdfMake from \"pdfmake/build/pdfmake\";\r\nimport pdfFonts from \"pdfmake/build/vfs_fonts\";\r\n\r\nimport {renderSingleImage, renderObject, renderArray} from \"../components/ReportRenders.jsx\";\r\npdfMake.vfs = pdfFonts.pdfMake.vfs;\r\n\r\nconst defaultStyles = {\r\n    header: {\r\n        fontSize: 18,\r\n        bold: true,\r\n        margin: [0, 0, 0, 10]\r\n    },\r\n    subheader: {\r\n        fontSize: 16,\r\n        bold: true,\r\n        margin: [0, 10, 0, 5]\r\n    },\r\n    tableExample: {\r\n        margin: [0, 5, 0, 0]\r\n    },\r\n    tableHeader: {\r\n        bold: true,\r\n        fontSize: 13,\r\n        color: 'black'\r\n    }\r\n};\r\n\r\nfunction ExportTable(cols, datas, title) {\r\n\r\n    let table = [];\r\n\r\n    const tableHeadings = cols.map( item => {\r\n        if(item.type === \"text\") {\r\n            return { text: item.title, style: 'tableHeader'}\r\n\r\n        } else if(item.type === \"boolean\") {\r\n            return { text: item.title, style: 'tableHeader'}\r\n\r\n        } else if(item.type === \"array\") {\r\n            return { text: item.title, style: 'tableHeader'}\r\n\r\n        } else if(item.type === \"image\") {\r\n            return { text: item.title, style: 'tableHeader'}\r\n\r\n        } else if(item.type === \"object\") {\r\n            return { text: item.title, style: 'tableHeader'}\r\n\r\n        } else {\r\n            return { text: \"ERROR\", style: 'tableHeader'};\r\n        }\r\n     });\r\n\r\n\r\n    function reformatData(item) {\r\n        if(typeof item === \"string\" || typeof item === \"number\" ) {\r\n            return item;\r\n\r\n        } else if(typeof item === \"boolean\") {\r\n            return item ? \"Yes\" : \"No\";\r\n\r\n        } else if(typeof item === \"object\" && !Array.isArray(item)) {\r\n            return renderObject(item);\r\n        \r\n        } else if(typeof item === \"object\" && Array.isArray(item)) {\r\n\r\n            if(item.length > 0){\r\n                if(item[0].mime) {\r\n                    return renderArray(item, \"gallery\");\r\n                } else if(item[0].Code) {\r\n                    //render directly without calling additional scripts\r\n                    return item.map( item => item.Code).join(\", \");\r\n                }\r\n            }\r\n            return renderArray(item, \"custom\");\r\n\r\n        } else {\r\n            console.log(\"ReformatData(): Unknown data format\");\r\n            return \"---\";\r\n        }\r\n    }\r\n     \r\n    table.push(tableHeadings);\r\n    datas.forEach( subarray => {\r\n        let tmp = subarray.map( item => reformatData(item));\r\n        table.push(tmp);\r\n    });\r\n\r\n    //Add different column width for different tables\r\n    const getColWidths = headers => {\r\n        let result = [];\r\n        \r\n        function selectValue(item) {\r\n            //if(item.text === \"Имя\" || item.text === \"Имя (Ru)\" || item.text === \"Имя (En)\" || item.text === \"Вид\") {\r\n            if( [\"Имя\", \"Имя (Ru)\", \"Имя (En)\", \"Вид\", \"Виды\"].some( el => el === item.text) ) {\r\n                return 150;\r\n            } else if( [\"Год\", \"Фото\", \"Галерея\"].some( el => el === item.text) ) {\r\n                return 30; \r\n            } else if( [\"[ ]\", \"Фото\", \"Галерея\"].some( el => el === item.text)) {           \r\n            } else {\r\n                return \"*\";\r\n            }\r\n        }\r\n       \r\n        if(headers.length > 5) {\r\n            headers.forEach( () => result.push(\"auto\") );\r\n        } else {\r\n            headers.forEach( (item) => result.push(selectValue(item)) );\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n\r\n//#############################################################################\r\n//#####     Export options  ###################################################\r\n//#############################################################################\r\n\r\n    let docDefinition = {\r\n        content: [\r\n            {text: title, style: 'subheader'},\r\n            {\r\n                style: 'tableExample',\r\n                table: {\r\n                    headerRows: 1,\r\n                    // dontBreakRows: true,\r\n                    // keepWithHeaderRows: 1,\r\n                    widths: getColWidths(tableHeadings),\r\n                    //widths: [\"auto\", \"auto\", \"*\", \"*\", \"auto\", \"\", \"\", \"\", \"\", \"\", \"\"],\r\n                    body: table\r\n                },\r\n                layout: 'lightHorizontalLines'\r\n            },\r\n            \r\n        ],\r\n        pageOrientation: tableHeadings.length > 5 ? 'landscape' : 'portrait',\r\n        styles: defaultStyles,\r\n        defaultStyle: {\r\n            fontSize: 10,\r\n        }\r\n    }\r\n\r\n    pdfMake.createPdf(docDefinition).open();\r\n\r\n}\r\n\r\nexport default ExportTable;","C:\\Users\\tarasenko_ag\\Desktop\\BASE\\editor\\src\\includes\\components\\Nav.jsx",["99","100"],"C:\\Users\\tarasenko_ag\\Desktop\\BASE\\editor\\src\\includes\\Species.jsx",["101"],"import React, {useState, useEffect} from \"react\";\r\nimport MaterialTable from '@material-table/core';\r\nimport axios from \"axios\";\r\n\r\nimport endpoints from \"./endpoints.jsx\";\r\nimport exportTable from \"./reports/ExportTable.jsx\";\r\nimport SingleEntity from \"./SingleEntity.jsx\";\r\n\r\n\r\nfunction Table() {\r\n\tconst [data, setData] = useState({headers: [], data: []}); //first array - headers to the table, second - table data\r\n    const [selectedRow, setSelectedRow] = useState();\r\n    const source = endpoints[0];\r\n    const tableTitle = `Таблица \"${source.localizedName}\"`;\r\n\r\n   \r\n    useEffect( () => getPosts(), [source]);\r\n\r\n    async function getPosts() {\r\n        try {\r\n            const fetchedData = await axios.get(source.link);\r\n            const headers = endpoints.find( item => item.name === source.name).headers; //Kinds\r\n\r\n            setData({\r\n                headers: headers,\r\n                data: fetchedData.data\r\n            })\r\n\r\n        } catch (err) {\r\n            console.error(err.message);\r\n        }\r\n    };\r\n\r\n    function exportWrapper(cols, datas) { exportTable(cols, datas, tableTitle) }\r\n    \r\n    SingleEntity(data, \"species\");\r\n\r\n    return  <div className=\"data-container\">\r\n                <MaterialTable \r\n                    columns={data.headers} \r\n                    data={data.data} \r\n                    title={tableTitle}\r\n                    onRowClick={((evt, selectedRow) => setSelectedRow(selectedRow.tableData.id))}\r\n                    options={{\r\n                        columnsButton: true,\r\n                        filtering: true,\r\n                        paging: true,\r\n                        filterCellStyle: { padding: \"10px\"},\r\n                        pageSize: 10,\r\n                        pageSizeOptions: [10, 30, 50, 100, 300],\r\n                        emptyRowsWhenPaging: false,\r\n                        exportMenu: [{ label: 'Сохранить в PDF', exportFunc: (cols, datas, tableTitle) => exportWrapper(cols, datas) }],\r\n                        rowStyle: rowData => ({\r\n                            backgroundColor: (selectedRow === rowData.tableData.id) ? '#e0ddef' : '#FFF'\r\n                          })\r\n                    }} \r\n                />\r\n            </div>\r\n\r\n}\r\n\r\nexport default Table;","C:\\Users\\tarasenko_ag\\Desktop\\BASE\\editor\\src\\includes\\components\\ReportRenders.jsx",[],"C:\\Users\\tarasenko_ag\\Desktop\\BASE\\editor\\src\\includes\\components\\TableRenders.jsx",["102","103","104"],"C:\\Users\\tarasenko_ag\\Desktop\\BASE\\editor\\src\\includes\\SingleEntity.jsx",[],{"ruleId":"105","severity":1,"message":"106","line":5,"column":8,"nodeType":"107","messageId":"108","endLine":5,"endColumn":17},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"105","severity":1,"message":"106","line":1,"column":8,"nodeType":"107","messageId":"108","endLine":1,"endColumn":17},{"ruleId":"105","severity":1,"message":"113","line":8,"column":2,"nodeType":"107","messageId":"108","endLine":8,"endColumn":6},{"ruleId":"105","severity":1,"message":"114","line":1,"column":26,"nodeType":"107","messageId":"108","endLine":1,"endColumn":35},{"ruleId":"105","severity":1,"message":"115","line":3,"column":8,"nodeType":"107","messageId":"108","endLine":3,"endColumn":14},{"ruleId":"105","severity":1,"message":"116","line":4,"column":8,"nodeType":"107","messageId":"108","endLine":4,"endColumn":21},{"ruleId":"105","severity":1,"message":"117","line":5,"column":8,"nodeType":"107","messageId":"108","endLine":5,"endColumn":21},{"ruleId":"105","severity":1,"message":"118","line":13,"column":9,"nodeType":"107","messageId":"108","endLine":13,"endColumn":15},{"ruleId":"109","replacedBy":"119"},{"ruleId":"111","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":16,"column":34,"nodeType":"123","endLine":16,"endColumn":42,"suggestions":"124"},{"ruleId":"125","severity":1,"message":"126","line":21,"column":63,"nodeType":"127","messageId":"128","endLine":21,"endColumn":65},{"ruleId":"121","severity":1,"message":"122","line":16,"column":34,"nodeType":"123","endLine":16,"endColumn":42,"suggestions":"129"},{"ruleId":"121","severity":1,"message":"122","line":15,"column":34,"nodeType":"123","endLine":15,"endColumn":42,"suggestions":"130"},{"ruleId":"105","severity":1,"message":"131","line":42,"column":9,"nodeType":"107","messageId":"108","endLine":42,"endColumn":18},{"ruleId":"132","severity":1,"message":"133","line":36,"column":9,"nodeType":"134","endLine":36,"endColumn":52},{"ruleId":"132","severity":1,"message":"133","line":53,"column":13,"nodeType":"134","endLine":53,"endColumn":62},{"ruleId":"105","severity":1,"message":"135","line":4,"column":9,"nodeType":"107","messageId":"108","endLine":4,"endColumn":26},{"ruleId":"105","severity":1,"message":"136","line":1,"column":17,"nodeType":"107","messageId":"108","endLine":1,"endColumn":25},{"ruleId":"137","severity":1,"message":"138","line":18,"column":7,"nodeType":"134","endLine":18,"endColumn":44},{"ruleId":"121","severity":1,"message":"122","line":17,"column":34,"nodeType":"123","endLine":17,"endColumn":42,"suggestions":"139"},{"ruleId":"105","severity":1,"message":"140","line":3,"column":22,"nodeType":"107","messageId":"108","endLine":3,"endColumn":32},{"ruleId":"105","severity":1,"message":"141","line":5,"column":8,"nodeType":"107","messageId":"108","endLine":5,"endColumn":20},{"ruleId":"105","severity":1,"message":"142","line":7,"column":8,"nodeType":"107","messageId":"108","endLine":7,"endColumn":14},"no-unused-vars","'bootstrap' is defined but never used.","Identifier","unusedVar","no-native-reassign",["143"],"no-negated-in-lhs",["144"],"'Link' is defined but never used.","'useEffect' is defined but never used.","'AddBox' is defined but never used.","'ArrowDownward' is defined but never used.","'MaterialTable' is defined but never used.","'source' is assigned a value but never used.",["143"],["144"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getPosts'. Either include it or remove the dependency array.","ArrayExpression",["145"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["146"],["147"],"'iconState' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'renderSingleImage' is defined but never used.","'useState' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["148"],"'makeStyles' is defined but never used.","'SingleEntity' is defined but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"149","fix":"150"},{"desc":"149","fix":"151"},{"desc":"149","fix":"152"},{"desc":"149","fix":"153"},"Update the dependencies array to be: [getPosts, source]",{"range":"154","text":"155"},{"range":"156","text":"155"},{"range":"157","text":"155"},{"range":"158","text":"155"},[611,619],"[getPosts, source]",[618,626],[606,614],[609,617]]